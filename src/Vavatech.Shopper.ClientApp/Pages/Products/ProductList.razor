@page "/products"
@using Domain
@using Shopper.ClientApp.Services

@inject ProductService Api


<h3>ProductList</h3>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Color</th>
                <th>Price</th>
                <th>Size</th>
                <th>Edit</th>
            </tr>
        </thead>

        <tbody>
            
            @foreach(var product in products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Color</td>
                    <td>@product.Price</td>
                    <td>@product.Size</td>
                    <td><button @onclick=@(() => NavigateToProduct(product.Id))><span class="oi oi-box"/></button></td>
                </tr>                
            }
        </tbody>

        <tfoot>
            <tr>
                <td>Count: @products.Count()</td>
            </tr>
        </tfoot>

    </table>
}

@code {
    private IEnumerable<Product> products;

    [Inject]
    public IJSInProcessRuntime JS { get; set; }
    [Inject]
    public NavigationManager NavigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        products = await Api.GetProducts();
    }

    private async Task NavigateToProduct(int id)
    {        
        var product = products.SingleOrDefault(p => p.Id == id);
        var json = System.Text.Json.JsonSerializer.Serialize(product);
        JS.InvokeVoid("localStorage.setItem", $"selectedProduct-{id}",json);

        NavigationManager.NavigateTo($"/products/{id}");
    }
}
